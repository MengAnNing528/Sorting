// Сортировка выбором - всегда O(n²)
void selectionsort(int* l, int* r) {
    for (int *i = l; i < r; i++) {        // n итераций
        for (int *j = i + 1; j < r; j++) { // n-i итераций
            if (*j < minz) ...             // O(1)
        }
    }
}
// Сложность: O(n²) всегда

// Сортировка пузырьком - O(n²) в худшем, O(n) в лучшем
void bubblesort(int* l, int* r) {
    while (b) {                           // до n итераций
        for (int* i = l; i + 1 < r; i++) { // n итераций
            if (*i > *(i + 1)) ...        // O(1)
        }
    }
}
// Сложность: O(n²) худший, O(n) лучший (уже отсортирован)

// Сортировка вставками - O(n²) в худшем, O(n) в лучшем
void insertionsort(int* l, int* r) {
    for (int *i = l + 1; i < r; i++) {   // n итераций
        while (j > l && *(j - 1) > *j) { // до i итераций
            swap(*(j - 1), *j);          // O(1)
        }
    }
}
// Сложность: O(n²) худший, O(n) лучший
